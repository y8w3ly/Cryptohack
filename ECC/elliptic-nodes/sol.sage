p = 4368590184733545720227961182704359358435747188309319510520316493183539079703
#a is unknown
#b is unknown


gx = 8742397231329873984594235438374590234800923467289367269837473862487362482
gy = 225987949353410341392975247044711665782695329311463646299187580326445253608
G = (gx,gy)

# Point(x=2582928974243465355371953056699793745022552378548418288211138499777818633265, y=2421683573446497972507172385881793260176370025964652384676141384239699096612)
#The point above is Q, which is [d]G and d is the secret we are looking for.
qx = 2582928974243465355371953056699793745022552378548418288211138499777818633265
qy = 2421683573446497972507172385881793260176370025964652384676141384239699096612
Q = (qx,qy)
#I asket deepseek for a function that I give it two points and p and it return a and b

gy_sq = (pow(gy, 2, p))
qy_sq = (pow(qy, 2, p))
gx_cu = (pow(gx, 3, p))
qx_cu = (pow(qx, 3, p))

numerator = (gy_sq - qy_sq) - (gx_cu - qx_cu)
numerator %= p
denominator = (gx - qx) % p
denominator_inv = inverse_mod(denominator, p)
a = (numerator * denominator_inv) % p
b = (gy_sq - gx_cu - a * gx) % p
E = EllipticCurve(GF(p), [a, b])
